// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: can_read_code.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Org.SilaStandard.V2.RealeaseCandidate.CanReadCode {

  /// <summary>Holder for reflection information generated from can_read_code.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class CanReadCodeReflection {

    #region Descriptor
    /// <summary>File descriptor for can_read_code.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CanReadCodeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNjYW5fcmVhZF9jb2RlLnByb3RvEjNvcmcuc2lsYV9zdGFuZGFyZC52Mi5y",
            "ZWFsZWFzZV9jYW5kaWRhdGUuY2FuUmVhZENvZGUaDHN0ZGxpYi5wcm90byJL",
            "Cg9TY2FubmVyUmVzcG9uc2USDwoHYmFyb2NkZRgBIAEoCRIRCgllcnJvckNv",
            "ZGUYAiABKAUSFAoMZXJyb3JNZXNzYWdlGAMgASgJIjgKDlNjYW5uZXJSZXF1",
            "ZXN0EgoKAmlkGAEgASgJEhoKEmVtcHR5QmFyb2NkZVN0cmluZxgCIAEoCSI2",
            "ChdTY2FubmVyQ29udGlub3VzUmVxdWVzdBIKCgJpZBgBIAEoCRIPCgdjb21t",
            "YW5kGAIgASgJMsMCCgxjYW5fUmVhZENvZGUSlwEKFnJlYWRfQ29kZVdpdGhF",
            "eGNlcHRpb24SNS5vcmcuc2lsYV9zdGFuZGFyZC52Mi5yZWFsZWFzZV9jYW5k",
            "aWRhdGUuc3RkbGliLkVtcHR5GkQub3JnLnNpbGFfc3RhbmRhcmQudjIucmVh",
            "bGVhc2VfY2FuZGlkYXRlLmNhblJlYWRDb2RlLlNjYW5uZXJSZXNwb25zZSIA",
            "EpgBCglyZWFkX0NvZGUSQy5vcmcuc2lsYV9zdGFuZGFyZC52Mi5yZWFsZWFz",
            "ZV9jYW5kaWRhdGUuY2FuUmVhZENvZGUuU2Nhbm5lclJlcXVlc3QaRC5vcmcu",
            "c2lsYV9zdGFuZGFyZC52Mi5yZWFsZWFzZV9jYW5kaWRhdGUuY2FuUmVhZENv",
            "ZGUuU2Nhbm5lclJlc3BvbnNlIgAy1wIKGGNhbl9SZWFkQ29kZUNvbnRpbnVv",
            "dXNseRKdAQoMc3RhcnRSZWFkaW5nEkMub3JnLnNpbGFfc3RhbmRhcmQudjIu",
            "cmVhbGVhc2VfY2FuZGlkYXRlLmNhblJlYWRDb2RlLlNjYW5uZXJSZXF1ZXN0",
            "GkQub3JnLnNpbGFfc3RhbmRhcmQudjIucmVhbGVhc2VfY2FuZGlkYXRlLmNh",
            "blJlYWRDb2RlLlNjYW5uZXJSZXNwb25zZSIAMAESmgEKC3N0b3BSZWFkaW5n",
            "EkMub3JnLnNpbGFfc3RhbmRhcmQudjIucmVhbGVhc2VfY2FuZGlkYXRlLmNh",
            "blJlYWRDb2RlLlNjYW5uZXJSZXF1ZXN0GkQub3JnLnNpbGFfc3RhbmRhcmQu",
            "djIucmVhbGVhc2VfY2FuZGlkYXRlLmNhblJlYWRDb2RlLlNjYW5uZXJSZXNw",
            "b25zZSIAMsABChVyZWFkX0NvZGVDb250aW51b3VzbHkSpgEKCm9wZW5SZWFk",
            "ZXISTC5vcmcuc2lsYV9zdGFuZGFyZC52Mi5yZWFsZWFzZV9jYW5kaWRhdGUu",
            "Y2FuUmVhZENvZGUuU2Nhbm5lckNvbnRpbm91c1JlcXVlc3QaRC5vcmcuc2ls",
            "YV9zdGFuZGFyZC52Mi5yZWFsZWFzZV9jYW5kaWRhdGUuY2FuUmVhZENvZGUu",
            "U2Nhbm5lclJlc3BvbnNlIgAoATABQkAKJnNpbGEyLmNvbS53ZWdhLWl0LmNv",
            "bW1vbi5iYXJjb2RlUmVhZGVyQg5NYXRyaXgyMDBQcm90b1ABogIDTVRYYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Org.SilaStandard.V2.RealeaseCandidate.Stdlib.StdlibReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.SilaStandard.V2.RealeaseCandidate.CanReadCode.ScannerResponse), global::Org.SilaStandard.V2.RealeaseCandidate.CanReadCode.ScannerResponse.Parser, new[]{ "Barocde", "ErrorCode", "ErrorMessage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.SilaStandard.V2.RealeaseCandidate.CanReadCode.ScannerRequest), global::Org.SilaStandard.V2.RealeaseCandidate.CanReadCode.ScannerRequest.Parser, new[]{ "Id", "EmptyBarocdeString" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.SilaStandard.V2.RealeaseCandidate.CanReadCode.ScannerContinousRequest), global::Org.SilaStandard.V2.RealeaseCandidate.CanReadCode.ScannerContinousRequest.Parser, new[]{ "Id", "Command" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  BarocdePoints are represented as latitude-longitude pairs in the E7 representation
  ///  (degrees multiplied by 10**7 and rounded to the nearest integer).
  ///  Latitudes should be in the range +/- 90 degrees and longitude should be in
  ///  the range +/- 180 degrees (inclusive).
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ScannerResponse : pb::IMessage<ScannerResponse> {
    private static readonly pb::MessageParser<ScannerResponse> _parser = new pb::MessageParser<ScannerResponse>(() => new ScannerResponse());
    public static pb::MessageParser<ScannerResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.SilaStandard.V2.RealeaseCandidate.CanReadCode.CanReadCodeReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ScannerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ScannerResponse(ScannerResponse other) : this() {
      barocde_ = other.barocde_;
      errorCode_ = other.errorCode_;
      errorMessage_ = other.errorMessage_;
    }

    public ScannerResponse Clone() {
      return new ScannerResponse(this);
    }

    /// <summary>Field number for the "barocde" field.</summary>
    public const int BarocdeFieldNumber = 1;
    private string barocde_ = "";
    public string Barocde {
      get { return barocde_; }
      set {
        barocde_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 2;
    private int errorCode_;
    public int ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "errorMessage" field.</summary>
    public const int ErrorMessageFieldNumber = 3;
    private string errorMessage_ = "";
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ScannerResponse);
    }

    public bool Equals(ScannerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Barocde != other.Barocde) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Barocde.Length != 0) hash ^= Barocde.GetHashCode();
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Barocde.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Barocde);
      }
      if (ErrorCode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ErrorMessage);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Barocde.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Barocde);
      }
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      return size;
    }

    public void MergeFrom(ScannerResponse other) {
      if (other == null) {
        return;
      }
      if (other.Barocde.Length != 0) {
        Barocde = other.Barocde;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Barocde = input.ReadString();
            break;
          }
          case 16: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 26: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ScannerRequest : pb::IMessage<ScannerRequest> {
    private static readonly pb::MessageParser<ScannerRequest> _parser = new pb::MessageParser<ScannerRequest>(() => new ScannerRequest());
    public static pb::MessageParser<ScannerRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.SilaStandard.V2.RealeaseCandidate.CanReadCode.CanReadCodeReflection.Descriptor.MessageTypes[1]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ScannerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ScannerRequest(ScannerRequest other) : this() {
      id_ = other.id_;
      emptyBarocdeString_ = other.emptyBarocdeString_;
    }

    public ScannerRequest Clone() {
      return new ScannerRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "emptyBarocdeString" field.</summary>
    public const int EmptyBarocdeStringFieldNumber = 2;
    private string emptyBarocdeString_ = "";
    public string EmptyBarocdeString {
      get { return emptyBarocdeString_; }
      set {
        emptyBarocdeString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ScannerRequest);
    }

    public bool Equals(ScannerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (EmptyBarocdeString != other.EmptyBarocdeString) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (EmptyBarocdeString.Length != 0) hash ^= EmptyBarocdeString.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (EmptyBarocdeString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EmptyBarocdeString);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (EmptyBarocdeString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EmptyBarocdeString);
      }
      return size;
    }

    public void MergeFrom(ScannerRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.EmptyBarocdeString.Length != 0) {
        EmptyBarocdeString = other.EmptyBarocdeString;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            EmptyBarocdeString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ScannerContinousRequest : pb::IMessage<ScannerContinousRequest> {
    private static readonly pb::MessageParser<ScannerContinousRequest> _parser = new pb::MessageParser<ScannerContinousRequest>(() => new ScannerContinousRequest());
    public static pb::MessageParser<ScannerContinousRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.SilaStandard.V2.RealeaseCandidate.CanReadCode.CanReadCodeReflection.Descriptor.MessageTypes[2]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ScannerContinousRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ScannerContinousRequest(ScannerContinousRequest other) : this() {
      id_ = other.id_;
      command_ = other.command_;
    }

    public ScannerContinousRequest Clone() {
      return new ScannerContinousRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "command" field.</summary>
    public const int CommandFieldNumber = 2;
    private string command_ = "";
    public string Command {
      get { return command_; }
      set {
        command_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ScannerContinousRequest);
    }

    public bool Equals(ScannerContinousRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Command != other.Command) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Command.Length != 0) hash ^= Command.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Command.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Command);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Command.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Command);
      }
      return size;
    }

    public void MergeFrom(ScannerContinousRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Command.Length != 0) {
        Command = other.Command;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Command = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
