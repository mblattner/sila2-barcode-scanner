// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sila_error.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Org.SilaStandard.V2.RealeaseCandidate.SilaError {

  /// <summary>Holder for reflection information generated from sila_error.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class SilaErrorReflection {

    #region Descriptor
    /// <summary>File descriptor for sila_error.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SilaErrorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBzaWxhX2Vycm9yLnByb3RvEjJvcmcuc2lsYV9zdGFuZGFyZC52Mi5yZWFs",
            "ZWFzZV9jYW5kaWRhdGUuc2lsYV9lcnJvciJmChJTaUxBX0Vycm9yX01lc3Nh",
            "Z2USDAoEdHlwZRgBIAEoCRITCgtkZXNjcmlwdGlvbhgCIAEoCRIbChNzdGFu",
            "ZGFyZF9lcnJvcl9uYW1lGAMgASgJEhAKCHJlZGlyZWN0GAQgASgJYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.SilaStandard.V2.RealeaseCandidate.SilaError.SiLA_Error_Message), global::Org.SilaStandard.V2.RealeaseCandidate.SilaError.SiLA_Error_Message.Parser, new[]{ "Type", "Description", "StandardErrorName", "Redirect" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  Error Message as described in the Specification
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SiLA_Error_Message : pb::IMessage<SiLA_Error_Message> {
    private static readonly pb::MessageParser<SiLA_Error_Message> _parser = new pb::MessageParser<SiLA_Error_Message>(() => new SiLA_Error_Message());
    public static pb::MessageParser<SiLA_Error_Message> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.SilaStandard.V2.RealeaseCandidate.SilaError.SilaErrorReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SiLA_Error_Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SiLA_Error_Message(SiLA_Error_Message other) : this() {
      type_ = other.type_;
      description_ = other.description_;
      standardErrorName_ = other.standardErrorName_;
      redirect_ = other.redirect_;
    }

    public SiLA_Error_Message Clone() {
      return new SiLA_Error_Message(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private string type_ = "";
    /// <summary>
    ///  Error type
    /// </summary>
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    ///  Human-readable desription of the error
    /// </summary>
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "standard_error_name" field.</summary>
    public const int StandardErrorNameFieldNumber = 3;
    private string standardErrorName_ = "";
    /// <summary>
    ///  Standard Error Name
    /// </summary>
    public string StandardErrorName {
      get { return standardErrorName_; }
      set {
        standardErrorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "redirect" field.</summary>
    public const int RedirectFieldNumber = 4;
    private string redirect_ = "";
    /// <summary>
    ///  URI for Error Handling Feature
    /// </summary>
    public string Redirect {
      get { return redirect_; }
      set {
        redirect_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SiLA_Error_Message);
    }

    public bool Equals(SiLA_Error_Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Description != other.Description) return false;
      if (StandardErrorName != other.StandardErrorName) return false;
      if (Redirect != other.Redirect) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (StandardErrorName.Length != 0) hash ^= StandardErrorName.GetHashCode();
      if (Redirect.Length != 0) hash ^= Redirect.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (StandardErrorName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StandardErrorName);
      }
      if (Redirect.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Redirect);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (StandardErrorName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StandardErrorName);
      }
      if (Redirect.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Redirect);
      }
      return size;
    }

    public void MergeFrom(SiLA_Error_Message other) {
      if (other == null) {
        return;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.StandardErrorName.Length != 0) {
        StandardErrorName = other.StandardErrorName;
      }
      if (other.Redirect.Length != 0) {
        Redirect = other.Redirect;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            StandardErrorName = input.ReadString();
            break;
          }
          case 34: {
            Redirect = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
