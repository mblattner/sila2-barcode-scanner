// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: can_set_configuration.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration {
  public static class canBarcodeReaderConfiguration
  {
    static readonly string __ServiceName = "org.sila_standard.v2.realease_candidate.canSetConfiguration.canBarcodeReaderConfiguration";

    static readonly Marshaller<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.BarcodeReaderConfiguration> __Marshaller_BarcodeReaderConfiguration = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.BarcodeReaderConfiguration.Parser.ParseFrom);
    static readonly Marshaller<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.status> __Marshaller_status = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.status.Parser.ParseFrom);
    static readonly Marshaller<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.Empty> __Marshaller_Empty = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.Empty.Parser.ParseFrom);

    static readonly Method<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.BarcodeReaderConfiguration, global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.status> __Method_setConfiguration = new Method<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.BarcodeReaderConfiguration, global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.status>(
        MethodType.Unary,
        __ServiceName,
        "setConfiguration",
        __Marshaller_BarcodeReaderConfiguration,
        __Marshaller_status);

    static readonly Method<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.Empty, global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.BarcodeReaderConfiguration> __Method_getConfiguration = new Method<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.Empty, global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.BarcodeReaderConfiguration>(
        MethodType.Unary,
        __ServiceName,
        "getConfiguration",
        __Marshaller_Empty,
        __Marshaller_BarcodeReaderConfiguration);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.CanSetConfigurationReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of canBarcodeReaderConfiguration</summary>
    public abstract class canBarcodeReaderConfigurationBase
    {
      /// <summary>
      /// sets all BarcodeReaderConfiguration Parameter
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.status> setConfiguration(global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.BarcodeReaderConfiguration request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// reads all BarocdeReaderConfiguration Parameter
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.BarcodeReaderConfiguration> getConfiguration(global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.Empty request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for canBarcodeReaderConfiguration</summary>
    public class canBarcodeReaderConfigurationClient : ClientBase<canBarcodeReaderConfigurationClient>
    {
      /// <summary>Creates a new client for canBarcodeReaderConfiguration</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public canBarcodeReaderConfigurationClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for canBarcodeReaderConfiguration that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public canBarcodeReaderConfigurationClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected canBarcodeReaderConfigurationClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected canBarcodeReaderConfigurationClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// sets all BarcodeReaderConfiguration Parameter
      /// </summary>
      public virtual global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.status setConfiguration(global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.BarcodeReaderConfiguration request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return setConfiguration(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// sets all BarcodeReaderConfiguration Parameter
      /// </summary>
      public virtual global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.status setConfiguration(global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.BarcodeReaderConfiguration request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_setConfiguration, null, options, request);
      }
      /// <summary>
      /// sets all BarcodeReaderConfiguration Parameter
      /// </summary>
      public virtual AsyncUnaryCall<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.status> setConfigurationAsync(global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.BarcodeReaderConfiguration request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return setConfigurationAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// sets all BarcodeReaderConfiguration Parameter
      /// </summary>
      public virtual AsyncUnaryCall<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.status> setConfigurationAsync(global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.BarcodeReaderConfiguration request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_setConfiguration, null, options, request);
      }
      /// <summary>
      /// reads all BarocdeReaderConfiguration Parameter
      /// </summary>
      public virtual global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.BarcodeReaderConfiguration getConfiguration(global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return getConfiguration(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// reads all BarocdeReaderConfiguration Parameter
      /// </summary>
      public virtual global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.BarcodeReaderConfiguration getConfiguration(global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.Empty request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getConfiguration, null, options, request);
      }
      /// <summary>
      /// reads all BarocdeReaderConfiguration Parameter
      /// </summary>
      public virtual AsyncUnaryCall<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.BarcodeReaderConfiguration> getConfigurationAsync(global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return getConfigurationAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// reads all BarocdeReaderConfiguration Parameter
      /// </summary>
      public virtual AsyncUnaryCall<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.BarcodeReaderConfiguration> getConfigurationAsync(global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.Empty request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getConfiguration, null, options, request);
      }
      protected override canBarcodeReaderConfigurationClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new canBarcodeReaderConfigurationClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(canBarcodeReaderConfigurationBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_setConfiguration, serviceImpl.setConfiguration)
          .AddMethod(__Method_getConfiguration, serviceImpl.getConfiguration).Build();
    }

  }
  public static class canSetConfiguration
  {
    static readonly string __ServiceName = "org.sila_standard.v2.realease_candidate.canSetConfiguration.canSetConfiguration";

    static readonly Marshaller<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter> __Marshaller_ConfigurationParameter = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter.Parser.ParseFrom);
    static readonly Marshaller<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.status> __Marshaller_status = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.status.Parser.ParseFrom);

    static readonly Method<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter, global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.status> __Method_setConfigParameter = new Method<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter, global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.status>(
        MethodType.Unary,
        __ServiceName,
        "setConfigParameter",
        __Marshaller_ConfigurationParameter,
        __Marshaller_status);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.CanSetConfigurationReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of canSetConfiguration</summary>
    public abstract class canSetConfigurationBase
    {
      /// <summary>
      ///
      ///  sets one configuration parameter.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.status> setConfigParameter(global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for canSetConfiguration</summary>
    public class canSetConfigurationClient : ClientBase<canSetConfigurationClient>
    {
      /// <summary>Creates a new client for canSetConfiguration</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public canSetConfigurationClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for canSetConfiguration that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public canSetConfigurationClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected canSetConfigurationClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected canSetConfigurationClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///
      ///  sets one configuration parameter.
      /// </summary>
      public virtual global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.status setConfigParameter(global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return setConfigParameter(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///
      ///  sets one configuration parameter.
      /// </summary>
      public virtual global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.status setConfigParameter(global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_setConfigParameter, null, options, request);
      }
      /// <summary>
      ///
      ///  sets one configuration parameter.
      /// </summary>
      public virtual AsyncUnaryCall<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.status> setConfigParameterAsync(global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return setConfigParameterAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///
      ///  sets one configuration parameter.
      /// </summary>
      public virtual AsyncUnaryCall<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.status> setConfigParameterAsync(global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_setConfigParameter, null, options, request);
      }
      protected override canSetConfigurationClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new canSetConfigurationClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(canSetConfigurationBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_setConfigParameter, serviceImpl.setConfigParameter).Build();
    }

  }
  public static class canReadConfiguration
  {
    static readonly string __ServiceName = "org.sila_standard.v2.realease_candidate.canSetConfiguration.canReadConfiguration";

    static readonly Marshaller<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter> __Marshaller_ConfigurationParameter = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter.Parser.ParseFrom);

    static readonly Method<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter, global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter> __Method_getConfigParamter = new Method<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter, global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter>(
        MethodType.Unary,
        __ServiceName,
        "getConfigParamter",
        __Marshaller_ConfigurationParameter,
        __Marshaller_ConfigurationParameter);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.CanSetConfigurationReflection.Descriptor.Services[2]; }
    }

    /// <summary>Base class for server-side implementations of canReadConfiguration</summary>
    public abstract class canReadConfigurationBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter> getConfigParamter(global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for canReadConfiguration</summary>
    public class canReadConfigurationClient : ClientBase<canReadConfigurationClient>
    {
      /// <summary>Creates a new client for canReadConfiguration</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public canReadConfigurationClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for canReadConfiguration that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public canReadConfigurationClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected canReadConfigurationClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected canReadConfigurationClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter getConfigParamter(global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return getConfigParamter(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter getConfigParamter(global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getConfigParamter, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter> getConfigParamterAsync(global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return getConfigParamterAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter> getConfigParamterAsync(global::Org.SilaStandard.V2.RealeaseCandidate.CanSetConfiguration.ConfigurationParameter request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getConfigParamter, null, options, request);
      }
      protected override canReadConfigurationClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new canReadConfigurationClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(canReadConfigurationBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_getConfigParamter, serviceImpl.getConfigParamter).Build();
    }

  }
}
#endregion
